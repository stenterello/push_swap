==4907== Memcheck, a memory error detector
==4907== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4907== Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info
==4907== Command: ./push_swap 5 3 2 1 9 8 6
==4907== Parent PID: 2840
==4907== 
--4907-- 
--4907-- Valgrind options:
--4907--    --leak-check=full
--4907--    --show-leak-kinds=all
--4907--    --track-origins=yes
--4907--    --verbose
--4907--    --log-file=valgrind-out.txt
--4907-- Contents of /proc/version:
--4907--   Linux version 5.4.0-100-generic (buildd@lcy02-amd64-002) (gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04)) #113-Ubuntu SMP Thu Feb 3 18:43:29 UTC 2022
--4907-- 
--4907-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--4907-- Page sizes: currently 4096, max supported 4096
--4907-- Valgrind library directory: /usr/lib/x86_64-linux-gnu/valgrind
--4907-- Reading syms from /home/davide/Documenti/Codici/42/push_swap/push_swap
--4907-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-2.31.so
--4907--   Considering /usr/lib/x86_64-linux-gnu/ld-2.31.so ..
--4907--   .. CRC mismatch (computed 0306b78c wanted 8d362b37)
--4907--   Considering /lib/x86_64-linux-gnu/ld-2.31.so ..
--4907--   .. CRC mismatch (computed 0306b78c wanted 8d362b37)
--4907--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.31.so ..
--4907--   .. CRC is valid
--4907-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux
--4907--   Considering /usr/lib/debug/.build-id/89/18b2578d0798c9451cf0c45a420e6c3b7fadbf.debug ..
--4907--   .. build-id is valid
--4907--    object doesn't have a dynamic symbol table
--4907-- Scheduler: using generic scheduler lock implementation.
--4907-- Reading suppressions file: /usr/lib/x86_64-linux-gnu/valgrind/default.supp
==4907== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-4907-by-davide-on-???
==4907== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-4907-by-davide-on-???
==4907== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-4907-by-davide-on-???
==4907== 
==4907== TO CONTROL THIS PROCESS USING vgdb (which you probably
==4907== don't want to do, unless you know exactly what you're doing,
==4907== or are doing some strange experiment):
==4907==   /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=4907 ...command...
==4907== 
==4907== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==4907==   /path/to/gdb ./push_swap
==4907== and then give GDB the following command
==4907==   target remote | /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=4907
==4907== --pid is optional if only one valgrind process is running
==4907== 
--4907-- REDIR: 0x4022e10 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c9ce2 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--4907-- REDIR: 0x4022be0 (ld-linux-x86-64.so.2:index) redirected to 0x580c9cfc (vgPlain_amd64_linux_REDIR_FOR_index)
--4907-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so
--4907--   Considering /usr/lib/debug/.build-id/24/b78f5ef26fc843c6c93ec4ce06a47a526b1e85.debug ..
--4907--   .. build-id is valid
--4907-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so
--4907--   Considering /usr/lib/debug/.build-id/a5/8e938fdf613d292bce30ef7b86786f7cbf19dc.debug ..
--4907--   .. build-id is valid
==4907== WARNING: new redirection conflicts with existing -- ignoring it
--4907--     old: 0x04022e10 (strlen              ) R-> (0000.0) 0x580c9ce2 vgPlain_amd64_linux_REDIR_FOR_strlen
--4907--     new: 0x04022e10 (strlen              ) R-> (2007.0) 0x0483f060 strlen
--4907-- REDIR: 0x401f5f0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483ffd0 (strcmp)
--4907-- REDIR: 0x4023370 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4843a20 (mempcpy)
--4907-- Reading syms from /usr/lib/x86_64-linux-gnu/libc-2.31.so
--4907--   Considering /usr/lib/x86_64-linux-gnu/libc-2.31.so ..
--4907--   .. CRC mismatch (computed ef41b1a0 wanted f854b801)
--4907--   Considering /lib/x86_64-linux-gnu/libc-2.31.so ..
--4907--   .. CRC mismatch (computed ef41b1a0 wanted f854b801)
--4907--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so ..
--4907--   .. CRC is valid
--4907-- REDIR: 0x49164b0 (libc.so.6:memmove) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x49157b0 (libc.so.6:strncpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x49167e0 (libc.so.6:strcasecmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x49150d0 (libc.so.6:strcat) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4915810 (libc.so.6:rindex) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4917c80 (libc.so.6:rawmemchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4932d10 (libc.so.6:wmemchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4932850 (libc.so.6:wcscmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4916610 (libc.so.6:mempcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4916440 (libc.so.6:bcmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4915740 (libc.so.6:strncmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4915180 (libc.so.6:strcmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4916570 (libc.so.6:memset) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4932810 (libc.so.6:wcschr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x49156a0 (libc.so.6:strnlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4915260 (libc.so.6:strcspn) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4916830 (libc.so.6:strncasecmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4915200 (libc.so.6:strcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4916980 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4933f80 (libc.so.6:wcsnlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4932890 (libc.so.6:wcscpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4915850 (libc.so.6:strpbrk) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4915130 (libc.so.6:index) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4915660 (libc.so.6:strlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x491ebd0 (libc.so.6:memrchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4916880 (libc.so.6:strcasecmp_l) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4916400 (libc.so.6:memchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4932960 (libc.so.6:wcslen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4915b10 (libc.so.6:strspn) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4916780 (libc.so.6:stpncpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4916720 (libc.so.6:stpcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x4917cc0 (libc.so.6:strchrnul) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x49168d0 (libc.so.6:strncasecmp_l) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--4907-- REDIR: 0x49fe410 (libc.so.6:__strrchr_avx2) redirected to 0x483ea10 (rindex)
--4907-- REDIR: 0x4910110 (libc.so.6:malloc) redirected to 0x483b780 (malloc)
==4907== Invalid write of size 4
==4907==    at 0x10BD04: create_n (seq.c:47)
==4907==    by 0x10BF2D: get_lis (seq.c:98)
==4907==    by 0x10A3C0: sort (sort.c:84)
==4907==    by 0x1092BE: main (main.c:32)
==4907==  Address 0x4a6b140 is 8 bytes after a block of size 56 alloc'd
==4907==    at 0x483B7F3: malloc (vg_replace_malloc.c:309)
==4907==    by 0x10C12F: ft_calloc (in /home/davide/Documenti/Codici/42/push_swap/push_swap)
==4907==    by 0x10BE79: allocate_lists (seq.c:81)
==4907==    by 0x10BF18: get_lis (seq.c:97)
==4907==    by 0x10A3C0: sort (sort.c:84)
==4907==    by 0x1092BE: main (main.c:32)
==4907== 
==4907== Invalid read of size 4
==4907==    at 0x10BD51: create_p (seq.c:62)
==4907==    by 0x10BF42: get_lis (seq.c:99)
==4907==    by 0x10A3C0: sort (sort.c:84)
==4907==    by 0x1092BE: main (main.c:32)
==4907==  Address 0x4a6b170 is 16 bytes before a block of size 56 alloc'd
==4907==    at 0x483B7F3: malloc (vg_replace_malloc.c:309)
==4907==    by 0x10C12F: ft_calloc (in /home/davide/Documenti/Codici/42/push_swap/push_swap)
==4907==    by 0x10BEAA: allocate_lists (seq.c:84)
==4907==    by 0x10BF18: get_lis (seq.c:97)
==4907==    by 0x10A3C0: sort (sort.c:84)
==4907==    by 0x1092BE: main (main.c:32)
==4907== 

valgrind: m_mallocfree.c:305 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 6, hi = 393216.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==4907==    at 0x58046FFA: show_sched_status_wrk (m_libcassert.c:388)
==4907==    by 0x58047127: report_and_quit (m_libcassert.c:459)
==4907==    by 0x580472CB: vgPlain_assert_fail (m_libcassert.c:525)
==4907==    by 0x580514B4: get_bszB_as_is (m_mallocfree.c:305)
==4907==    by 0x580514B4: is_inuse_block (m_mallocfree.c:333)
==4907==    by 0x580514B4: vgPlain_describe_arena_addr (m_mallocfree.c:1594)
==4907==    by 0x5803DE9A: vgPlain_describe_addr (m_addrinfo.c:187)
==4907==    by 0x5803CD9F: vgMemCheck_update_Error_extra (mc_errors.c:1187)
==4907==    by 0x58041F04: vgPlain_maybe_record_error (m_errormgr.c:823)
==4907==    by 0x5803C1D8: vgMemCheck_record_address_error (mc_errors.c:767)
==4907==    by 0x58017AF4: mc_LOADVn_slow (mc_main.c:1559)
==4907==    by 0x100A10C421: ???
==4907==    by 0x10090CAF2F: ???
==4907==    by 0x10090CAF17: ???
==4907==    by 0x10090CAF2F: ???
==4907==    by 0x10090CAF3F: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 4907)
==4907==    at 0x10BD66: create_p (seq.c:62)
==4907==    by 0x10BF42: get_lis (seq.c:99)
==4907==    by 0x10A3C0: sort (sort.c:84)
==4907==    by 0x1092BE: main (main.c:32)
client stack range: [0x1FFEFFE000 0x1FFF000FFF] client SP: 0x1FFEFFFC20
valgrind stack range: [0x1008FCB000 0x10090CAFFF] top usage: 18248 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

